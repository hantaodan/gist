# 01.不要在常量和变量中出现容易混淆的字母
--- |
  long i = 1l;
  字母l和o尽量不要和数字混用，以免让人产生误差。
  l作为长整型标志时，务必大写。
  long i = 1L;
...

# 02.莫要常量变成变量
--- |
  务必使常量的值在运行期间保持不变。
  interface Constant{
    public static final int RAND_CONST = new Random().nextInt();
  }
  没有人知道这个RAND_CONST是什么。
  常量必须是常量，编译时期必须确定。
  final不要随意的改变值。
...

# 03.三元操作符的类型务必一致
--- |
  int i = 80;
  String s = String.valueOf( i < 100 ? 90 : 100);
  String s1 = String.valueOf( i < 100 ? 90 : 100.0);
  s.equals(s1); 
...

# 06 覆写变长方法也要要循规蹈矩
--- |
  // 基类
  class Base{
    void fun(int price,int... discounts){
    }
  }
  // 子类，覆盖父类方法
  class Sub extends Base{
  void fun(int price,int[] discounts){
    }
  }
  显示形式要一致
...

# 04.避免对象的浅拷贝
--- |
  实现了Cloneable接口就表示它具备了被拷贝的能力
  覆写clone()方法就会完全具备了拷贝能力
  比new生成对象要快
  Object提供了一个对象拷贝的默认方法：super.clone()是一种浅拷贝。
  浅拷贝规则如下：
  (1)基本类型，拷贝其值
  (2)对象，拷贝地址引用
  (3)String 字符串，拷贝的也是一个地址引用，但是修改时，从字符串池中重新生成新的字符串，原有的字符串对象保持不变，可认为是一个基本类型。
...  
  
    
  
  

